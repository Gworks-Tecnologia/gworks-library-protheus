#include "TOTVS.ch"

using namespace Gworks.Library.Classes

namespace Gworks.Sample.Orm
/*/{Protheus.doc} fSetEnv
Inicializa/define um ambiente qualquer para testes sem necessidade de login.
@type function
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/04/2024
/*/
Static Function fSetEnv( cEmp as character, cFil as character )

    Local aTables := {"SA1", "SC5", "SC6"} as array

    Default cEmp := "01"
    Default cFil := "01"

    RPCSetEnv(;
        /* cRpcEmp  */ cEmp,;
        /* cRpcFil  */ cFil,;
        /* cEnvUser */ ,;
        /* cEnvPass */ ,;
        /* cEnvMod  */ ,;
        /* cFunName */ ,;
        /* aTables  */ aTables)

Return

/*/{Protheus.doc} fResetEnv
Reinicia o ambiente.
@type function
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/04/2024
/*/
Static Function fResetEnv()

    RpcClearEnv()

Return

/*/{Protheus.doc} GwDataAccessSeekSample
Exemplo de busca com o método Seek() da classe GwDataAccess().
@type function
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/04/2024
/*/
User Function GwDataAccessSeekSample()

    Local oDao as object

    if empty(CFILANT) .Or. isBlind()
        fSetEnv()
    endif

    oDao := GwDataAccess():New('SA1')
    oDao:SetOrder('A1_FILIAL+A1_NOME+A1_LOJA')
    if oDao:Seek('GIOVANI SOARES')
        ConOut("CPF " + oDao:GetValue('A1_CGC') )
    endif

Return

/*/{Protheus.doc} GwDataAccessWhileSample
Exemplo de uso da classe GwDataAccess() com while.
@type function
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/04/2024
@param cPedido, character, Número do Pedido de Venda.
/*/
User Function GwDataAccessWhileSample( cPedido as character )

    Default cPedido := '000321' // pedido de exemplo

    Local lContinue := .T. as logical
    Local oDaoPedido
    Local oDaoItens

    oDaoPedido := GwDataAccess():New('SC5')
    oDaoPedido:SetOrder("C5_FILIAL+C5_NUM")
    if !oDaoPedido:Seek(cPedido)
        conOut( 'FALHA AO LOCALIZAR O PEDIDO ' + cPedido  )
        lContinue := .T.
    endif

    oDaoItens := GwDataAccess():New('SC6')
    oDaoItens:SetOrder("C6_FILIAL+C6_NUM+C6_ITEM+C6_PRODUTO")
    if !oDaoItens:Seek( cPedido )
        conOut( 'FALHA AO LOCALIZAR OS ITENS DO PEDIDO ' + cPedido  )
        lContinue := .F.
    endif

    if lContinue

        // Imprime todos os itens do pedido

        while oDaoItens:NotEndOfFile() ;
            .and. oDaoItens:GetValue('C6_FILIAL') == xFilial("SC6");
            .and. oDaoItens:GetValue('C6_NUM') == oDaoPedido:GetValue('C5_NUM')

            conOut( 'ITEM ' +;
                            oDaoItens:GetValue('C6_ITEM') +'-'+;
                            oDaoItens:GetValue('C6_PRODUTO') )

            oDaoItens:SkipLine()

        enddo

    endif

    oDaoPedido:CloseArea()
    oDaoItens:CloseArea()

Return

/*/{Protheus.doc} GwDataAccessWhileQuerySample
Exemplo de uso da classe GwDataAccess() com while usando query SQL.
@type function
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/04/2024
@param cPedido, character, Número do Pedido de Venda.
/*/
User Function GwDataAccessWhileQuerySample( cPedido as character )

    Default cPedido := '000321' // pedido de exemplo

    Local cAlias as character
    Local oDaoQuery

    cAlias := GetNextQuery()

    BeginSql Alias cAlias

        SELECT C6_ITEM, C6_PRODUTO
        FROM %table:SC6% SC6
        WHERE SC6.C6_FILIAL = %xFilial:SC6%
            AND SC6.C6_NUM = %cPedido%
            AND SC6.%notDel%

    EndSql

    oDaoQuery := GwDataAccess():New(cAlias)

    // Imprime todos os itens do pedido

    while oDaoQuery:NotEndOfFile()

        conOut( 'ITEM ' +;
                        oDaoQuery:GetValue('C6_ITEM') +'-'+;
                        oDaoQuery:GetValue('C6_PRODUTO') )

        oDaoItens:SkipLine()

    enddo

    oDaoPedido:CloseArea()
    oDaoItens:CloseArea()

Return

User Function GwDataAccessExemploComRelacionamentoPorIndice() // Gworks.Sample.Classes.U_GwDataAccessExemploComRelacionamentoPorIndice

    Local oAttr   as object
    Local oData   as object

    oAttr := GwKeyValue():New()
    oAttr:Add( 'AliasFrom'  , 'SC5'               )
    oAttr:Add( 'AliasJoin'  , 'SC6'               )
    oAttr:Add( 'IndexFrom'  , 'C5_FILIAL+C5_NUM'  ) // o índice da tabela principal é compatível...
    oAttr:Add( 'KeyFrom'    , ''                  )
    oAttr:Add( 'IndexJoinFK', 'C6_FILIAL+C6_NUM'  ) // ...com o índice da tabela relacionada.
    oAttr:Add( 'IndexJoinPK', 'C6_FILIAL+C6_ITEM' )

    oData := GwDataAccess():New("SC5")
    oData:SelectArea()
    oData:SetOrder('C5_FILIAL+C5_NUM')
    oData:GoTop()
    if oData:Seek('491176')
        if oData:SetRelation(oAttr)
            ConOut("Relacionamento por índice criado entre SC5 e SC6!")
        endif

    endif

    fResetEnv()

Return


User Function GwDataAccessExemploComRelacionamentoPorChave() // Gworks.Sample.Classes.U_GwDataAccessExemploComRelacionamentoPorChave

    Local oAttr   as object
    Local oData   as object

    fSetEnv()

    oAttr := GwKeyValue():New()
    oAttr:Add( 'AliasFrom'  , 'SC5'                   )
    oAttr:Add( 'AliasJoin'  , 'DA0'                   )
    oAttr:Add( 'IndexFrom'  , 'C5_FILIAL+C5_NUM'      ) // o índice da tebela principal não é compatível
    oAttr:Add( 'KeyFrom'    , 'C5_FILIAL+C5_TABELA'   )
    oAttr:Add( 'IndexJoinFK', 'DA0_FILIAL+DA0_CODTAB' ) // ...com o índice da tabela relacionada. Neste caso é necessário o uso do atributo KeyFrom.
    oAttr:Add( 'IndexJoinPK', 'DA0_FILIAL+DA0_CODTAB' )

    oData := GwDataAccess():New("SC5")
    oData:SelectArea()
    oData:SetOrder('C5_FILIAL+C5_NUM')
    oData:GoTop()
    if oData:Seek('491176')
        if oData:SetRelation(oAttr)
            ConOut("Relacionamento por chave criado entre SC5 e DA0!")
        endif
    endif

    fResetEnv()

Return


User Function GwDataAccessExemploDetalhado // Gworks.Sample.Classes.U_GwDataAccessExemploDetalhado

    Local nI     := 0  as numeric
    Local nJ     := 0  as numeric
    Local cTes   := "" as character
    Local cField := "" as character
    Local cValue := "" as character

    Local oAttr   as object
    Local oField  as object
    Local oValue  as object
    Local oResult as object

    oAttr := GwKeyValue():New()
    oAttr:Add( 'AliasFrom'  , 'SC5'               )
    oAttr:Add( 'AliasJoin'  , 'SC6'               )
    oAttr:Add( 'IndexFrom'  , 'C5_FILIAL+C5_NUM'  ) // o índice da tabela principal é compatível...
    oAttr:Add( 'KeyFrom'    , ''                  )
    oAttr:Add( 'IndexJoinFK', 'C6_FILIAL+C6_NUM'  ) // ...com o índice da tabela relacionada.
    oAttr:Add( 'IndexJoinPK', 'C6_FILIAL+C6_ITEM' )

    oData := GwDataAccess():New("SC5")
    oData:SelectArea()
    oData:SetOrder('C5_FILIAL+C5_NUM')
    oData:GoTop()
    if oData:Seek('491176')
        if oData:SetRelation(oAttr)

            ConOut("Relacionamento por índice criado entre SC5 e SC6!")

            ConOut("...procurnado itens do pedido em que o campo C6_QTDVEN seja igual à 15")
            if oData:RelationSearch('C6_QTDVEN',15)
                oResult := oData:RelationGetSearchResult()
            endif

            ConOut('...retornando o conteúdo dos campos C6_PRODUTO e C6_TES em objeto KeyValue')
            oResult := oData:RelationGetValues({'C6_PRODUTO','C6_TES'})

            ConOut('...retornando o conteúdo do campo C6_TES referente ao item 7 do pedido')
            oValue := oResult:GetValueByKey('0107')
            cTes   := oResult:GetValueByKey('C6_TES')

            ConOut('...imprimindo o conteúdo dos campos C6_PRODUTO e C6_TES de todos os itens do pedido ') // TODO: testar...
            for nI:=1 to oResult:Length()
                cLinha := oResult:GetNameByPosition(nI)
                oField := oResult:GetValueByPosition(nI)
                ConOut( "...imprimindo valores referente aos itens: " + CRLF +;
                        "Filial: " + Left(cLinha,2) + CRLF +;
                        "Item: " + Right(cLinha,2) )
                for nJ:=1 to len(oField:Length)
                    cField := oField:GetNameByPosition(nJ)
                    cValue := oField:GetValueByPosition(nJ)
                    ConOut( " - " + cField + ": " + cValue )
                next
            next

        endif

    endif

    RpcClearEnv()

Return

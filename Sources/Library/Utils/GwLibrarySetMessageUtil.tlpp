#include "tlpp-core.th"

using namespace Gworks.Library.Classes

namespace Gworks.Library.Utils

Static lBlind__ := ( isBlind() .or. type("CFILANT") == 'U' ) as logical

/*/{Protheus.doc} GwSetMessage
Função auxiliar para definir o output da mensagem entre error, log ou ambos.
@type function
@version  12.1.2310
@author Gworks - Giovani
@since 29/10/2024
@param oError, object, Objeto GwError().
@param oLog, object, Object GwConsoleLog().
@param jParam, json, Mensagens no formato:
        {
            "cState" : 'string'
            "cError" : 'string'
            "cSuggestion" : 'string'
            "cTitle" : 'string'
            "lError" : 'logical'
            "cDetails" : 'string'
        }
@param cOpc, character, Modo de operação, entre:
    - auto:
        - define a mensagem como erro se for execução com interface
        - define a mensagem como log se for execução sem interface
    - error: define a mensagem como erro
    - log: define a mensagem como log
/*/
User Function GwSetMessage(;
                    oError as object,;
                    oLog as object,;
                    jParam as json )

    if valType(oError) != 'O'
        oError := GwError():New()
    endif

    if valType(oLog) != 'O'
        oLog := GwConsoleLog():New()
    endif

    oError:SetError( ;
                jParam['cError'],;
                jParam['cSuggestion'],;
                jparam['cTitle'],;
                jParam['lError'] )

    oLog:SetState(upper(jParam['cState']))
    oLog:SetMessage(upper(fwNoAccent(jParam['cError'])), .T., .F.)

    if !empty(jParam['cDetails'])

        oError:SetAutoGRLog( jParam['cDetails'] )

        oLog:SetMessage(jParam['cDetails'], .T., .F. )

    endif

    if !lBlind__
        oError:ShowError()
    endif

Return

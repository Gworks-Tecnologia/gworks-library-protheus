#include "tlpp-core.th"

using namespace Gworks.Library.Classes
using namespace Global.Projects.ImportacaoBI.Enum

namespace Global.Projects.ImportacaoBI.Controllers

/*/{Protheus.doc} DBConnection
Classe para conexão com banco de dados.
@type class
@version 12.1.2310
@author Gworks-Giovani
@since 5/13/2024
@obs Os respectivos bancos de dados precisam estar devidamente configurados no TOTVS DBAccess.
/*/
Class DBConnection

    Public Data cDbType as character
    Public Data cDbAlias as character
    Public Data nDbPort as numeric

    Public Data nTcLinkResult as numeric

    Public Method New() Constructor
    Public Method SetConn(cDbType, cDbAlias, nDbPort)
    Public Method ClearConn()
    Public Method Connect() as logical
    Public Method Disconnect() as logical

    Private Method Init()

EndClass

/*/{Protheus.doc} DBConnection::New
Método construtor da classe.
@type method
@version 12.1.2310
@author Gworks-Giovani
@since 5/13/2024
@return object, instância do objeto.
/*/
Method New() Class DBConnection

    ::Init()

Return Self

/*/{Protheus.doc} DBConnection::Init
Inicializa atributos da classe.
@type method
@version 12.1.2310
@author Gworks-Giovani
@since 5/13/2024
/*/
Method Init() Class DBConnection

    ::cDbType := ""
    ::cDbAlias := ""
    ::nDbPort := 0
    ::lConnected := .F.

Return

/*/{Protheus.doc} DBConnection::SetConn
Define a conexão a ser realizada.
@type method
@version 12.1.2310
@author Gworks-Giovani
@since 5/13/2024
@param _cDbType, character,
    Tipo do Banco de Dados, entre:
        - ORACLE
        - POSTGRES
        - MSSQL
@param _cDbAlias, character, Nome da conexão, conforme definido no DBAccess.
@param _nDbPort, numeric, Número correspondente à porta de conexão com o DBAccess.
/*/
Method SetConn( _cDbType as character, _cDbAlias as character, _nDbPort as numeric ) Class DBConnection

    ::cDbType := _cDbType
    ::cDbAlias := _cDbAlias
    ::nDbPort := _nDbPort

Return

/*/{Protheus.doc} DBConnection::ClearConn
Remove configuração de conexão realizada previamente.
@type method
@version 12.1.2310
@author Gworks-Giovani
@since 5/13/2024
/*/
Method ClearConn() Class DBConnection

    if !::lConnected
        ::Disconnect()
    endif

    ::Init()

Return

/*/{Protheus.doc} DBConnection::Connect() as logical
Conecta com o banco de dados configurado conforme método ::SetConn().
@type method
@version 12.1.2310
@author Gworks-Giovani
@since 5/13/2024
@return logical, Retorna 'true' para sucesso e 'false' para falha na conexão.
/*/
Method Connect() as logical Class DBConnection

    Local lResult := .F. as logical

    if !empty(::cDbType) .And. !empty(::cDbAlias) .And. !empty(::nDbPort)

        ::nTcLinkResult := TCLink('MSSQL/_BI', 'FS-SRV-09', 7890)

        if ::nTcLinkResult < 0
            TcUnLink()
        else
            ::lConnected := .T.
            lResult := .T.
        endif

    endif

Return lResult

/*/{Protheus.doc} DBConnection::Disconnect() as logical
Desconecta com o Banco de Dados previamente conectado.
@type method
@version 12.1.2310
@author Gworks-Giovani
@since 5/13/2024
@return logical, Retorna 'true' para sucesso e 'false' para falha na conexão.
/*/
Method Disconnect() as logical Class DBConnection

    if ::lConnected
        TcUnLink()
    endif

Return


#include "TOTVS.ch"
#include "MsObject.ch"

using namespace Gworks.Library.Utils
using namespace Gworks.library.Functions

namespace Gworks.Library.Classes

Class GwDataRelation

    // Atributos de controle da classe
    Public Data aJoinRecno     as array     default {}
    Public Data lJoin          as logical   default .F.

    // Atributos públicos da classe
    Public Data cAliasFrom     as character default "" // Ex.: "SC5" - tabela de origem (from)
    Public Data cAliasJoin     as character default "" // Ex.: "SC6" - tabela de destino (join)
    Public Data cIndexFrom     as character default "" // Ex.: "C5_FILIAL+C5_NUM" - índice da tabela de origem para relacionamento com a tabela de destino
    Public Data cKeyFrom       as character default "" // Ex.: "C5_FILIAL+C5_NUM" - chave da tabela de origem para relacionamento com a tabela de destino quando cIndexFrom não corresponder à cIndexJoinFK
    Public Data cIndexJoinFK   as character default "" // Ex.: "C6_FILIAL+C6_NUM" - índice da tabela de destino para relacionamentocom tabela de origem (foreign key)
    Public Data cIndexJoinPK   as character default "" // Ex.: "C6_FILIAL+C6_ITEM+C6_PRODUTO" - índice de identificação da tabela de destino (primary key)
    Public Data cKeyJoinFK     as character default "" // Ex.: "0101003125" - valor conforme cIndexJoinFK
    Public Data aKeyJoinPK     as array     default {} // Ex.: "010101000000000000111" - valor conforme cIndexJoinPK

    // Atributos internos da classe
    Private Data oSearchResult as object    default nil

    // Métodos construtores
    Public Method New( oAttr ) Constructor

    // Métodos públicos da classe
    Public Method Join() as logical
    Public Method Search( cFieldName as character, xContent as variant ) as logical
    Public Method GetValue( cFieldName as character, cToken as character ) as variant

    // Métodos internos da classe
    Private Method ValidAttr() as logical
    Private Method ValidJoin() as logical
    Private Method Load() as logical

EndClass

/*/{Protheus.doc} GwDataRelation::New
Método construtor da classe.
@type method
@version 12.1.33
@author Gworks
@since 09/03/2023
@param oAttr, object, objeto do tipo GwKeyValue() contendo os argumentos obrigatórios (*) para o funcionamento da classe.
@return object, Instância do object criada.
@obs
    (*) São obrigatórios os seguintes argumentos:
        - cAliasFrom
        - cAliasJoin
        - cIndexFrom
        - cIndexJoinFK
        - cIndexJoinPK
@example
    oAttr := GwKeyValue():New()
    oAttr:Add('AliasFrom','SC5')
    oAttr:Add('AliasJoin','SC6')
    oAttr:Add('IndexFrom','C5_FILIAL+C5_NUM')
    oAttr:Add('IndexJoinFK','C6_FILIAL+C6_NUM')
    oAttr:Add('IndexJoinPK','C6_FILIAL+C6_ITEM+C6_PRODUTO')
    oRelation := GwDataRelation():New(oAttr)
/*/
Method New( oAttr as object ) Class GwDataRelation

    Default oAttr := nil

    if !Empty(oAttr)

        ::cAliasFrom   := if( oAttr:HasName('AliasFrom'  ), oAttr:GetValueByKey('AliasFrom'  ), "" )
        ::cAliasJoin   := if( oAttr:HasName('AliasJoin'  ), oAttr:GetValueByKey('AliasJoin'  ), "" )
        ::cIndexFrom   := if( oAttr:HasName('IndexFrom'  ), oAttr:GetValueByKey('IndexFrom'  ), "" )
        ::cKeyFrom     := if( oAttr:HasName('KeyFrom'    ), oAttr:GetValueByKey('KeyFrom'    ), "" )
        ::cIndexJoinFK := if( oAttr:HasName('IndexJoinFK'), oAttr:GetValueByKey('IndexJoinFK'), "" )
        ::cIndexJoinPK := if( oAttr:HasName('IndexJoinPK'), oAttr:GetValueByKey('IndexJoinPK'), "" )

    endif

    if Empty(::cKeyFrom)
        ::cKeyFrom := ::cIndexFrom // se cKeyFrom não for informado, assume o mesmo conteúdo de cIndexFrom
    endif

    ::cKeyJoinFK := ""
    ::aKeyJoinPK := {}
    ::oSearchResult := GwKeyValue():New()

Return Self

/*/{Protheus.doc} GwDataRelation::ValidAttr() as logical
Método interno para validar se os atributos obrigatórios foram informados para o funcionamento da classe.
@type method
@version 12.1.33
@author Gworks
@since 09/03/2023
@return logical, .T. sucesso e .F. falha.
/*/
Method ValidAttr() as logical Class GwDataRelation

    do case

    case Empty( ::cAliasFrom )
        UserException("GwDataRelation:ValidAttr - Atributo cAliasFrom não informado!" )

    case Empty( ::cAliasJoin )
        UserException("GwDataRelation:ValidAttr - Atributo cAliasJoin não informado!" )

    case Empty( ::cIndexFrom )
        UserException("GwDataRelation:ValidAttr - Atributo cIndexFrom não informado!" )

    case Empty( ::cIndexJoinFK )
        UserException("GwDataRelation:ValidAttr - Atributo cIndexJoinFK não informado!" )

    case Empty( ::cIndexJoinPK )
        UserException("GwDataRelation:ValidAttr - Atributo cIndexJoinPK não informado!" )

    endcase

Return .T.

/*/{Protheus.doc} GwDataRelation::ValidJoin() as logical
Método interno para validar, na chamada de métodos que dependem do método Join(), se o mesmo foi executando previamente.
@type method
@version 12.1.33
@author Gworks
@since 09/03/2023
@return logical, .T. sucesso e .F. falha.
/*/
Method ValidJoin() as logical Class GwDataRelation

    if !::lJoin
        UserException("GwDataRelation:ValidJoin - Metodo Join() não executado ou executado com falhas!" )
    endif

Return .T.

/*/{Protheus.doc} GwDataRelation::Load() as logical
Método interno para carregar os dados referente à tabela relacionada conforme a regra de relacionamento
definida entre cKeyJoinFK e cIndexFrom.
@type method
@version 12.1.33
@author Gworks
@since 09/03/2023
@return logical, .T. sucesso e .F. falha.
@obs
    Popula os atributos:
     - aJoinRecno: array contendo a lista de identificadores recno() de cada elemento join correspondente
     - aKeyJoinPK: array de strings conforme índice de identificação definido por cIndexJoinPK de cada elemento join correspondente
    (*) Este método possui outros métodos que dependem dele.
/*/
Method Load() as logical Class GwDataRelation

    Local aArea      := {}  as array
    Local cAliasJoin := ""  as character
    Local cAliasFrom := ""  as character
    Local lResult    := .F. as logical

    ::ValidAttr()
    ::ValidJoin()

    FwFreeArray(::aJoinRecno)
    ::aJoinRecno := {}

    cAliasFrom := ::cAliasFrom
    cAliasJoin := ::cAliasJoin

    aArea := GetArea()

    while !(cAliasJoin)->(EOF()) .And. (cAliasJoin)->&(Self:cIndexJoinFK) == (cAliasFrom)->&(::cKeyFrom)

        aAdd( ::aJoinRecno, (cAliasJoin)->(Recno()) )
        aAdd( ::aKeyJoinPK, (cAliasJoin)->&(::cIndexJoinPK) )

        (cAliasJoin)->(DbSkip())

    enddo

    RestArea(aArea)

    lResult := ( !Empty(::aJoinRecno) .And. !Empty(::aKeyJoinPK) )

Return lResult

/*/{Protheus.doc} GwDataRelation::Join() as logical
Posiciona a tabela relacionada conforme a chave do índice definida por cIndexJoinFK.
@type method
@version 12.1.33
@author Gworks
@since 09/03/2023
@return logical, .T. sucesso e .F. falha.
@example oRelation:Join()
@obs
    Popula o atributo cKeyJoinFK que servirá de valor referêncial para relacionamento com a
    tabela from em outros métodos, como o método Load() por exemplo.
/*/
Method Join() as logical Class GwDataRelation

    Local cKey       := ""  as character
    Local lResult    := .F. as logical

    ::ValidAttr()

    cKey := (::cAliasFrom)->&(::cKeyFrom)

    DbSelectArea(::cAliasJoin)
    (::cAliasJoin)->(DbSetOrder(RetOrder(,::cIndexJoinFK)))
    (::cAliasJoin)->(DbGoTop())
    if (::cAliasJoin)->(MsSeek(cKey))
        ::cKeyJoinFK := (::cAliasJoin)->&(::cIndexJoinFK)
        ::lJoin := .T.
        lResult := ::Load()
    endif

    if !lResult
        ::lJoin := .F.
        lResult := .F.
    endif

Return lResult

/*/{Protheus.doc} GwDataRelation::GetValue( cFieldName as character, cToken as character ) as variant
Apenas retorna o conteúdo de um campo conforme tabela relacionada sem alterar seu posicionamento.
@type method
@version 12.1.33
@author Gworks
@since 09/03/2023
@return variant, conteúdo do campo.
@obs Observações:
    Suporta que seja informado vários campos na string cFieldName separados por um torken a ser
    definido em cToken (se não informado, assume ";" como padrão). Neste caso, o retorno será
    uma string concatenada com o conteúdo dos campos.
/*/
Method GetValue( cFieldName as character, cToken as character ) as variant Class GwDataRelation

    // (::cAliasJoin)->&(cFieldName)

    Local nI           := 0   as numeric
    Local aFieldName   := {}  as array
    Local xResult      := nil as variant

    Default cFieldName := ""
    Default cToken     := ";"

    if !Empty(cFieldName)

        xResult := ""

        aFieldName := StrToKarr(cFieldName, cToken)

        for nI:=1 to Len(aFieldName)

            cFieldName := aFieldName[nI]

            xResult += (::cAliasJoin)->&(cFieldName)

        next

    endif

Return xResult

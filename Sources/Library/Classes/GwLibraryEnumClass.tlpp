#include "TLPP-Core.th"
#include "TLPP-Object.th"

using namespace Gworks.Library.Utils
using namespace Gworks.library.Functions

namespace Gworks.Library.Classes

/*/{Protheus.doc} GwEnum
Classe para definição de enumeradores.
@type class
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/03/2024
@example Código de exemplo:

    #include 'FWMVCDef.th'

    using namespace Gworks.Library.Classes

    User Function GWEnumSample()

        Private oEnum_ as object

        oEnum_ := GwEnum():New()

        oEnum_:SetEnum( "Pendente" , "Solicitação de Compra aprovada!"  )
        oEnum_:SetEnum( "Aprovado" , "Solicitação de Compra aprovada!"  )
        oEnum_:SetEnum( "Reprovado", "Solicitação de Compra reprovada!" )

        do case

            case nOpc == oEnum_:GetEnum( "Pendente"  ) ; ConOut( "Description: " + oEnum_:GetDescription( nOpc ) )
            case nOpc == oEnum_:GetEnum( "Aprovado"  ) ; ConOut( "Description: " + oEnum_:GetDescription( nOpc ) )
            case nOpc == oEnum_:GetEnum( "Reprovado" ) ; ConOut( "Description: " + oEnum_:GetDescription( nOpc ) )

        endcase

    Return

/*/
Class GwEnum

    Public Data aEnum as array default {}
    Public Data oEnum as object default nil
    Public Data nEnum as numeric default 0

    Public Method New() Constructor
    Public Method SetEnum() as variant
    Public Method GetEnum as variant
    Public Method GetDescription as character

EndClass

/*/{Protheus.doc} GwEnum::New
Cria instância do objeto.
@type method
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/03/2024
@return variant, Objeto instanciado da classe.
@example Código de exemplo:
    oEnum_ := GwEnum():New()
/*/
Method New() class GwEnum

    ::aEnum := {}
    ::nEnum := 0

Return Self

/*/{Protheus.doc} GwEnum::SetEnum
Define um enumerador.
@type method
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/03/2024
@param cName, character, Nome do Enumerador.
@param cDescription, character, Descrição do Enumarador.
@param nId, numeric, Id do Enumerador (opcional).
@example Código de exemplo:
    oEnum_:SetEnum( 'Pendente' , 'Solicitação de Compra aprovada!'  )
/*/
Method SetEnum( cName as character, cDescription as character, nId as numeric ) class GwEnum

    Local jEnum as json

    Default cName := ""
    Default cDescription := ""
    Default nId := -1

    if empty(cName)
        UserException('GwEnum:New - Argumentos inválidos ou não informados!')
    endif

    if nId == -1
        ::nEnum++
        nId := ::nEnum
    endif

    jEnum := JsonObject():New()
    jEnum['id'] := nId
    jEnum['name'] := cName
    jEnum['description'] = cDescription

    aAdd(::aEnum, jEnum)

Return

/*/{Protheus.doc} GwEnum::GetEnum
Retorna conteúdo do Enumarador conforme argumentos de entrada.
@type method
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/03/2024
@param xSearch, variant, Conteúdo para busca do Enumerador.
@param cProperty, character, Propriedade que deseja-se retornar do Enumerador.
@return variant, Retorno conforme argumento cProperty.
@example Código de exemplo:

    // retorna o correspondente numérico do enumerador 'Pendente'.
    nOpc := oEnum_:GetEnum( 'Pendente' ) // ...retorna 1

    // Retorna o nome correspondente do enumerador 1.
    cEnum := oEnum_:GetEnum( 1 ) // ...retorna "Pendente"

/*/
Method GetEnum( xSearch as variant, cProperty as character ) class GwEnum

    Local jEnum as json
    Local nPos as numeric
    Local xResult as variant

    Default xSearch := nil
    Default cProperty := nil // 'id'

    if empty(cProperty)
        cProperty := iif( valType(xSearch) == 'N', 'name', 'id' )
    endif

    if!(lower(cProperty) $ 'id;name;description')
        Return nil
    endif

    nPos := 0

    do case

        case valType(xSearch) == "N"

            nPos := aScan(::aEnum, { |x| x['id'] == xSearch  }  )


        case valType(xSearch) == "C"

            nPos := aScan(::aEnum, { |x| x['name'] == xSearch  }  )

    endcase

    if nPos > 0

        jEnum := ::aEnum[nPos]

        xResult := jEnum[cProperty]

    endif

Return xResult

/*/{Protheus.doc} GwEnum::GetDescription( xSearch as variant ) as character
Obtem a descrição de um enumerador.
@type method
@version 12.1.2210
@author Gworks - Giovani Soares
@since 11/03/2024
@return character, Descrição do enumerador
@example Código de exemplo:

    // Obtem a descrição do enumerador 1
    cDesc := oEnum_:GetDescription( 1 ) // ...retorna "Solicitação de Compra aprovada!"

    // Obtem a descrição do enumerador 'Pendente'
    cDesc := oEnum_:GetDescription( 'Pendente' ) // ...retorna "Solicitação de Compra aprovada!"

/*/
Method GetDescription( xSearch as variant ) as character class GwEnum

    Local cDescription as character

    Default xSearch := nil

    if valType(xSearch) $ "N;C"

        cDescription := ::GetEnum( xSearch, 'description' )

    endif

Return cDescription
